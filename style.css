/* Enhanced Admin Panel Styles */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    background-color: #f5f7fa;
    color: #333;
}

/* --- UTILITIES --- */
.btn {
    padding: 10px 20px; border: none; border-radius: 6px; font-size: 14px; font-weight: 500;
    cursor: pointer; transition: all 0.2s ease-in-out; text-decoration: none; display: inline-flex;
    align-items: center; justify-content: center; gap: 8px;
}
.btn-primary { background-color: #3498db; color: white; }
.btn-primary:hover { background-color: #2980b9; }
.btn-danger { background-color: #e74c3c; color: white; }
.btn-danger:hover { background-color: #c0392b; }
.btn-full-width { width: 100%; padding: 12px; }
.btn:disabled { background-color: #95a5a6; cursor: not-allowed; }

/* --- NOTIFICATION SYSTEM --- */
#notification-container {
    position: fixed; top: 20px; right: 20px; z-index: 9999; max-width: 400px;
}
.notification {
    background: white; border-radius: 8px; padding: 15px 20px; margin-bottom: 10px;
    box-shadow: 0 4px 12px rgba(0,0,0,0.15); border-left: 4px solid #3498db;
    display: flex; justify-content: space-between; align-items: center; animation: slideIn 0.3s ease-out;
}
.notification-success { border-left-color: #2ecc71; }
.notification-error { border-left-color: #e74c3c; }
.notification-close {
    background: none; border: none; font-size: 18px; cursor: pointer; color: #7f8c8d; margin-left: 15px;
}
@keyframes slideIn { from { transform: translateX(100%); opacity: 0; } to { transform: translateX(0); opacity: 1; } }

/* --- LOGIN PAGE --- */
.login-page-body {
    display: flex; align-items: center; justify-content: center; min-height: 100vh;
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
}
.login-form-container {
    background: white; padding: 40px; border-radius: 12px; box-shadow: 0 10px 30px rgba(0,0,0,0.2);
    text-align: center; width: 100%; max-width: 400px;
}
.form-group { margin-bottom: 20px; text-align: left; }
.form-group label { display: block; margin-bottom: 5px; font-weight: 500; }
.form-group input { width: 100%; padding: 10px; border: 1px solid #ccc; border-radius: 6px; }

/* --- ADMIN PANEL --- */
.admin-body { background: #f5f7fa; }
#admin-panel-container { display: flex; min-height: 100vh; }
.admin-sidebar { width: 280px; background: #2c3e50; color: white; display: flex; flex-direction: column; }
.admin-sidebar-header { padding: 25px 20px; border-bottom: 1px solid #34495e; }
.logo { font-size: 24px; font-weight: bold; color: #3498db; margin-bottom: 5px; }
.admin-tag { font-size: 12px; color: #95a5a6; text-transform: uppercase; letter-spacing: 1px; }
.user-info-small { padding: 20px; border-bottom: 1px solid #34495e; }
.admin-nav { flex: 1; padding: 20px 0; }
.admin-nav-link {
    display: flex; align-items: center; padding: 15px 25px; color: #bdc3c7; text-decoration: none;
    transition: all 0.3s; border-left: 3px solid transparent;
}
.admin-nav-link:hover, .admin-nav-link.active { background: #34495e; color: white; border-left-color: #3498db; }
.admin-nav-link i { margin-right: 15px; width: 20px; text-align: center; }
.admin-sidebar-footer { padding: 20px; border-top: 1px solid #34495e; }
.admin-sidebar-footer .btn { width: 100%; }
.admin-main-content { flex: 1; display: flex; flex-direction: column; }
.admin-header { background: white; padding: 20px 30px; border-bottom: 1px solid #e9ecef; }
.admin-header h1 { color: #2c3e50; font-size: 28px; }
#admin-content-area { flex: 1; padding: 30px; background: #f8f9fa; overflow-y: auto; }

/* Dashboard & Widgets */
.admin-stats-grid { display: grid; grid-template-columns: repeat(auto-fit, minmax(250px, 1fr)); gap: 20px; }
.admin-stat-card {
    background: white; padding: 25px; border-radius: 12px; display: flex; align-items: center;
    box-shadow: 0 2px 10px rgba(0,0,0,0.06); transition: transform 0.2s, box-shadow 0.2s;
}
.admin-stat-card:hover { transform: translateY(-3px); box-shadow: 0 4px 15px rgba(0,0,0,0.1); }
.admin-stat-card i { font-size: 36px; margin-right: 20px; width: 60px; text-align: center; color: #3498db; }
.stat-value { font-size: 32px; font-weight: bold; color: #2c3e50; }
.stat-label { color: #7f8c8d; font-size: 14px; margin-top: 5px; }

/* Loading, Empty, Prompt States */
.loading-spinner, .error-state, .empty-state { text-align: center; padding: 50px; color: #7f8c8d; }
.spinner {
    width: 40px; height: 40px; border: 4px solid #f3f3f3; border-top: 4px solid #3498db;
    border-radius: 50%; animation: spin 1s linear infinite; margin: 0 auto;
}
@keyframes spin { 0% { transform: rotate(0deg); } 100% { transform: rotate(360deg); } }
.login-prompt-container {
    display: none; position: fixed; top: 0; left: 0; width: 100%; height: 100%; z-index: 9998;
    align-items: center; justify-content: center; background: rgba(44, 62, 80, 0.85);
}
.login-prompt-box {
    background: white; padding: 40px; border-radius: 12px; box-shadow: 0 10px 30px rgba(0,0,0,0.2);
    text-align: center; width: 100%; max-width: 400px;
}
.login-prompt-icon { font-size: 48px; color: #e74c3c; margin-bottom: 20px; }
## 4. script.js (Complete and Working)
This script handles the logic for both the login page and the admin panel, including the new "Estimations" section.

JavaScript

// --- CONFIGURATION & GLOBAL STATE ---
const appState = {
    jwtToken: null,
    currentUser: null,
};
const API_BASE_URL = 'https://steelconnect-backend.onrender.com/api';

// --- CORE UTILITY FUNCTIONS ---
function showNotification(message, type = 'info') {
    const container = document.getElementById('notification-container');
    if (!container) return;
    const notification = document.createElement('div');
    notification.className = `notification notification-${type}`;
    notification.innerHTML = `<span>${message}</span><button class="notification-close" onclick="this.parentElement.remove()">&times;</button>`;
    container.appendChild(notification);
    setTimeout(() => {
        notification.style.opacity = '0';
        setTimeout(() => notification.remove(), 300);
    }, 5000);
}

function hideGlobalLoader() {
    const loader = document.getElementById('global-loader');
    if (loader) loader.style.display = 'none';
}

async function apiCall(endpoint, method = 'GET', body = null) {
    const token = localStorage.getItem('jwtToken');
    const fullUrl = `${API_BASE_URL}${endpoint}`;
    const options = {
        method,
        headers: { 'Content-Type': 'application/json' },
    };
    if (token) options.headers['Authorization'] = `Bearer ${token}`;
    if (body) options.body = JSON.stringify(body);

    try {
        const response = await fetch(fullUrl, options);
        const responseData = await response.json().catch(() => ({}));
        if (!response.ok) {
            throw new Error(responseData.message || `HTTP error! Status: ${response.status}`);
        }
        return responseData;
    } catch (error) {
        const errorMessage = (error.name === 'TypeError') ? 'Network error: Could not connect to server.' : error.message;
        showNotification(errorMessage, 'error');
        throw new Error(errorMessage);
    }
}

function logout() {
    localStorage.removeItem('jwtToken');
    localStorage.removeItem('currentUser');
    showNotification('You have been logged out.', 'success');
    setTimeout(() => { window.location.href = 'index.html'; }, 1000); // Redirect to login page
}

// --- LOGIN PAGE LOGIC ---
function initializeLoginPage() {
    document.getElementById('admin-login-form')?.addEventListener('submit', handleAdminLogin);
}

async function handleAdminLogin(event) {
    event.preventDefault();
    const loginButton = event.target.querySelector('button[type="submit"]');
    const email = document.getElementById('email').value;
    const password = document.getElementById('password').value;

    if (!email || !password) {
        showNotification('Email and Password are required.', 'error');
        return;
    }

    loginButton.disabled = true;
    loginButton.textContent = 'Logging in...';

    try {
        const data = await apiCall('/auth/login/admin', 'POST', { email, password });
        if (!data.token || !data.user) throw new Error('Invalid response from server.');
        
        localStorage.setItem('jwtToken', data.token);
        localStorage.setItem('currentUser', JSON.stringify(data.user));
        showNotification('Login successful! Redirecting...', 'success');
        setTimeout(() => { window.location.href = 'admin.html'; }, 1000); // Redirect to admin panel
    } catch (error) {
        loginButton.disabled = false;
        loginButton.textContent = 'Login';
    }
}

// --- ADMIN PANEL LOGIC ---
function initializeAdminPage() {
    const token = localStorage.getItem('jwtToken');
    const userJson = localStorage.getItem('currentUser');

    if (token && userJson) {
        try {
            const user = JSON.parse(userJson);
            if (user.role?.toLowerCase() === 'admin' || user.type?.toLowerCase() === 'admin') {
                appState.currentUser = user;
                setupAdminPanel();
            } else {
                showAdminLoginPrompt("Access Denied: Admin privileges required.");
            }
        } catch (error) {
            showAdminLoginPrompt("Invalid user data. Please log in again.");
        }
    } else {
        showAdminLoginPrompt();
    }
}

function showAdminLoginPrompt(message = "You must be an administrator to view this page.") {
    hideGlobalLoader();
    document.getElementById('admin-panel-container').style.display = 'none';
    const loginPrompt = document.getElementById('admin-login-prompt');
    loginPrompt.style.display = 'flex';
    loginPrompt.querySelector('p').textContent = message;
}

function setupAdminPanel() {
    hideGlobalLoader();
    document.getElementById('admin-login-prompt').style.display = 'none';
    document.getElementById('admin-panel-container').style.display = 'flex';
    
    document.getElementById('admin-user-info').innerHTML = `<strong>${appState.currentUser.name}</strong><small>${appState.currentUser.role || 'Admin'}</small>`;
    document.getElementById('admin-logout-btn').addEventListener('click', logout);
    
    const navLinks = document.querySelectorAll('.admin-nav-link');
    navLinks.forEach(link => {
        link.addEventListener('click', (e) => {
            e.preventDefault();
            navLinks.forEach(l => l.classList.remove('active'));
            link.classList.add('active');
            document.getElementById('admin-section-title').textContent = link.textContent.trim();
            renderAdminSection(link.dataset.section);
        });
    });
    
    document.querySelector('.admin-nav-link[data-section="dashboard"]').click();
}

function renderAdminSection(section) {
    const contentArea = document.getElementById('admin-content-area');
    contentArea.innerHTML = '<div class="loading-spinner"><div class="spinner"></div></div>';
    switch (section) {
        case 'dashboard': renderAdminDashboard(); break;
        case 'estimations': renderAdminEstimations(); break;
        // Add other cases as you build them out
        default: 
            contentArea.innerHTML = `<div class="empty-state"><h3>${section.charAt(0).toUpperCase() + section.slice(1)}</h3><p>This section is under construction.</p></div>`;
    }
}

async function renderAdminDashboard() {
    const contentArea = document.getElementById('admin-content-area');
    try {
        const data = await apiCall('/admin/dashboard');
        const stats = data.stats || {};
        contentArea.innerHTML = `
            <div class="admin-stats-grid">
                <div class="admin-stat-card"><i></i><div class="stat-info"><span class="stat-value">${stats.totalUsers || 0}</span><span class="stat-label">Total Users</span></div></div>
                <div class="admin-stat-card"><i></i><div class="stat-info"><span class="stat-value">${stats.totalQuotes || 0}</span><span class="stat-label">Total Quotes</span></div></div>
                <div class="admin-stat-card"><i></i><div class="stat-info"><span class="stat-value">${stats.totalMessages || 0}</span><span class="stat-label">Total Messages</span></div></div>
                <div class="admin-stat-card"><i></i><div class="stat-info"><span class="stat-value">${stats.totalJobs || 0}</span><span class="stat-label">Total Jobs</span></div></div>
            </div>`;
    } catch (error) {
        contentArea.innerHTML = '<div class="error-state"><p>Failed to load dashboard data.</p></div>';
    }
}

function renderAdminEstimations() {
    const contentArea = document.getElementById('admin-content-area');
    contentArea.innerHTML = `<div class="empty-state"><h3>Estimations</h3><p>The estimations management section is under construction.</p></div>`;
}

// --- INITIALIZATION ---
document.addEventListener('DOMContentLoaded', () => {
    if (document.getElementById('admin-login-form')) {
        initializeLoginPage();
    } else if (document.getElementById('admin-panel-container')) {
        initializeAdminPage();
    }
});
